server:
  port: 8079

zuul:
  prefix: /api
  routes:
    hello-server:
      path: /server/**
      service-id: HELLO-SERVER
#      url: http://hello-server:8071
    hello-client:
      path: /client/**
      service-id: HELLO-CLIENT
#      url: http://hello-client:8072
    user:
      path: /api/loggedinuser/**
      stripPrefix: true
      url: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}
      
    
eureka:
  client:
    service-url:
      defaultZone: http://eureka-registry:8761/eureka/
  instance:
    hostname: eureka-registry


# Define settings for Single-Sign-On with OAuth2; this means that we need to relay the OAuth token
# to the subsequent resources that are proxied by the Zuul api gateway.

# The home definition tells us to allow anonymous access (secure: false) to the static resources that
# are accessed through the Zuul proxy.

# Remaining properties are used by the OAuth2 SSO to determine where the authorization server is and
# what client crendentials to use to access that server.
# The OAuth2 server definition that would be used to send the authorization requests to
authserver:
    hostname: api-gateway
    port: 8899
    contextPath: userauth

security:
  basic:
      enabled: false
  oauth2:

    client:
      access-token-uri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/oauth/token
      user-authorization-uri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/oauth/authorize
      client-id: acme
      client-secret: acmesecret

# The userInfoUri is used to authenticate the user so that SSO token can be relayed forward. It needs to either be
# a physical endpoint (defined using userInfoUri) OR can be bypassed if you use a JSON web token (JWT) that stores
# information about grants and authentication in the token itself.

# Note that the "/user" endpoint needs to provide the principle of the logged in user (/me endpoint)
    resource:
      user-info-uri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/me
      prefer-token-info: false

      
# Increase the Hystrix timeout to 60s (for all)
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000

---
server:
  port: 8079

spring:
  profiles: docker
  application:
    name: api-gateway
zuul:
  prefix: /api
  routes:
    hello-server:
      path: /server/**
      service-id: HELLO-SERVER
    hello-client:
      path: /client/**
      service-id: HELLO-CLIENT

eureka:
  client:
    service-url:
      defaultZone: http://eureka-registry:8761/eureka/
  instance:
    hostname: eureka-registry
